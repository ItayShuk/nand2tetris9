class Food{

    field int x;
    field int y;
    field int cols;
    field int rows;
    field boolean valid;
    field int randomFactor;
    field Array foodIndex;

    constructor Food new(Snake snake, int random){
        let x = 3;
        let y = 7;
		let randomFactor = random;
        let valid = false;

		let foodIndex = Array.new(16);
		let foodIndex[0] = 0;
		let foodIndex[1] = 32;
		let foodIndex[2] = 64;
		let foodIndex[3] = 96;
		let foodIndex[4] = 128;
		let foodIndex[5] = 160;
		let foodIndex[6] = 192;
		let foodIndex[7] = 224;
		let foodIndex[8] = 256;
		let foodIndex[9] = 288;
		let foodIndex[10] = 320;
		let foodIndex[11] = 352;
		let foodIndex[12] = 384;
		let foodIndex[13] = 416;
		let foodIndex[14] = 448;
		let foodIndex[15] = 480;
		while (~valid){
		    let x = foodIndex[random((x - randomFactor + 32261),16)];
		    let y = foodIndex[random((y - randomFactor + 32537),8)];
		    if(body_check(x, y, snake))
		    {
		        let valid = true;
		    }
		    let randomFactor = randomFactor + 10;
		}
        return this;
    }

    method int getX(){
        return x;
    }

    method int getY(){
        return y;
    }

    method int random(int a, int b) {
        var int d;
        var int r;
        let d = Math.divide(a,b);
        let r = a - (b * d);
        return Math.abs(r);
    }

    /** draws the food to the screen*/
    method void draw(){
        var int size;
        let size = 8;
        do Screen.setColor(true);
        do Screen.drawRectangle(x, y, x + size, y + size);
        return;
    }

    /** erases the food from the screen */
    method void erase(){
        var int size;
        let size = 8;
        do Screen.setColor(false);
        do Screen.drawRectangle(x, y, x + size, y + size);
        return;
    }

    /** disposes of the Food object */
    method void dispose(){
        do foodIndex.dispose();
        do Memory.deAlloc(this);
        return;
    }

    method boolean body_check(int x,int y,Snake snake){
        var int i;
        var Points current;
        let i = 0;
        while(i<snake.get_size()){
            let current = snake.body_ind(i);
            if (((x+4)> current.getX()) & ((x-4)<current.getX()))
            {
                if (((y+4)>current.getY()) & ((y-4)<current.getY())){
                    return false;
                }
            }
            let i = i+1;
        }
        return true;
    }
}