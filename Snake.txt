Class Snake{
    // represents the head of the snake
    field int xHead;
    field int yHead;
    field Array body;
    field int size;
    field int direction;

    Constructor Snake(int x, int y){
        let xHead = x;
        let yHead = y;
        let body = new Array(1)
        let body[0] = new Points(x,y)
        let size = 3;
        return this;
    }

    method void moveUp(){
        let direction = new Points(0,1);
    }

    method void moveDown(){
        let direction = new Points(0,-1);
    }

    method void moveLeft(){
        let direction = new Points(-1,0);
    }

    method void moveRight(){
        let direction = Points.new(1,0);
    }

    method void incSize(){
        var Array new_body;
        let new_body = Array.new (size+1);
        let i = 0;
        new_body[0] = Points.new(xHead+direction.getX(),yHead+direction.getY())
        while (i < length) {
            let new_body[i+1] = body[i];
            let i = i + 1;
        let body = new_body;
        let size = size+1;
        let xHead = body[0].getX()
        let yHead = body[0].getY()
    }

    method void move(){
        var Points new_head;
        var Array new_body;
        let new_body =  Array.new (size);
        let new_head = Points.new(xHead+direction.getX(),yHead+direction.getY())
        let i = 0;
        let new_body[0] = new_head;
        while (i<size-1){
            let new_body[i+1] = body[i]
        }
        let body = new_body;
        let xHead = body[0].getX()
        let yHead = body[0].getY()
    }

    method boolean collision(){
        let i = 1;
        while (i<size){
            if (body[0].getX = body[i].getX & body[0].getY = body[i].getY){
                return true;
            }
        }
        return false;
    }

    method int getXHead(){
        return xHead;
    }
    method int getYHead(){
        return yHead;
    }

}